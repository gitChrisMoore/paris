{
	// Place your paris workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Formik Form": {
  "prefix": "useform",
  "body": [
    "import { useFormik } from \"formik\";",
    "",
    "const use${1:example} = () => {",
    "  const handleSubmit = () => {",
    "    console.log(\"handle submit\");",
    "  };",
    "",
    "  const formik = useFormik({",
    "    initialValues: { ${2:example}: \"\", ${3:example}: \"\" },",
    "    onSubmit: handleSubmit,",
    "  });",
    "",
    "  return { formik };",
    "};",
    "",
    "export default use${1:example};",
    ""
  ],
  "description": "Formik Form"
},
"Base Template": {
  "prefix": "base",
  "body": [
    "const ${1:example} = () => {",
    "  return (",
    "    // Snippet",
    "    <>// //</>",
    "  );",
    "};",
    "",
    "export default ${1:example};",
    ""
  ],
  "description": "Base Template"
}
}